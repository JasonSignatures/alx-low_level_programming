#!/bin/bash
0x00 C - preprocessor

Requirements
General
Allowed editors: vi, vim, emacs
All your files will be compiled on ubuntu 20.04 LTS using gcc, using the options -wall -werror -wextra -pedantic -std=gnu89
All your files should end with a new line
A README.me file, at the root of the folder of the project is mandatory
Your code should use the betty style. It will be checked using the betty-style.pl and betty-doc.pl
You are not allowed to use global variables
No more than 5 functions per file
The only C standard liabrary functions allowed are melloc, free and edit. Any use of functions like printf put, calloc, realloc etc... is forbidden
You are allowed to use -putchar
You don't have to push put-char.c, we will use our file. If you do it won't be taken into account
In the following examples, the main.c files are shown as examples. You can use them to test your functions, but you don't have to push them to your repo (if you do we won't take them into account). We will use our main.c file at compilation. Our main.c files might be different from the one shown in the examples
Don't forget to push your header file
All your header file should be include guarded

Tasks
0. Object-like Macro
mandatory
Create a header file that defines a macro named SIZE as an abbreviation for the token 1024.

1. Pi
mandatory
Create a header file that defines a macro named PI as an abbreviation for the token 3.14159265359.

File name 
mandatory
Write a program that prints the name of the file it was compiled from, followed by a new line.

You are allowed to use standard liabrary

3. Function-like macro
mandatory
Write a function-like macro ABS(x) that computes the absolute value of a  number x.

4. SUM

mandatory

Write a Function-like macro SUM(x, y) that computes the sum of the numbers x and y.
